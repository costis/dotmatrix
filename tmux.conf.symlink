set -g default-terminal "xterm-256color"
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"
set -g default-shell $SHELL 

# Make mouse useful, tmux > 2.1 include select, resize pane/window and console wheel scroll
set -g mouse on

# Selection with mouse should copy to clipboard right away, in addition to the default action.
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"


# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

set-window-option -g mode-keys vi
set -g escape-time 20 

# vi mode editing on tmux command line
set -g status-keys vi

## start window and pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# size for pane buffer set to 8k
set-option -g history-limit 8000

## set status bar
set-option -g status-style bg=colour7,fg=colour0,dim
set-window-option -g window-status-current-style fg=colour202,bg=colour239,bright

set-option -g status-right '#(whoami)@#H'
set-option -g status-left '#[bold] [#S] #[default]'

set-option -g status-right-length 60
set-option -g status-left-length 60

# status line timeout 4sec
set-option -g display-time 8000
#
## highlight active window
set-window-option -g window-status-current-style "bg=black,fg=colour255"
set-window-option -g window-status-current-format ' #I #W#F'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind-key -r H resize-pane -L 1
bind-key -r L resize-pane -R 1
bind-key -r K resize-pane -U 1
bind-key -r J resize-pane -D 1

# send the prefix to a nested client inside of the window
bind-key a send-prefix

# easy pane join
bind-key @ command-prompt -p "join pane from: "  " join-pane -s '%%'"

#Â vim mode for tmux >= v2.4
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
#unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# looks like C-y conflicts with vim's 'emmet' plugin
unbind-key C-y

# split with default dir
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h   -c "#{pane_current_path}"
bind c new-window        -c "#{pane_current_path}"

# toggle status bar visibility
bind-key S set-option -s status

#bind-key '\;' last-window

bind-key -n  C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
