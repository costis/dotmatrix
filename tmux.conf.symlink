set -g default-terminal "screen-256color"
set -g mode-mouse off
set-window-option -g mode-keys vi
set -g escape-time 20 

## start window and pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind-key -r < resize-pane -L 1
bind-key -r > resize-pane -R 1
bind-key -r + resize-pane -U 1
bind-key -r _ resize-pane -D 1
# bind-key -r = select-layout even-vertical
# bind-key -r | select-layout even-horizontal

# copy-paste ala vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy V rectangle-toggle

## set status bar
set-option -g status-utf8 on
set-option -g status-bg colour234
set-option -g status-fg colour7

#set-option -g status-left '⣿'
#set-option -g status-right '⡇ #[bold]❐ #S:#I#[default] ⡇ #[bold]#(whoami) ● #H#[default] '
set-option -g status-right '⡇ #(whoami)@#H'
set-option -g status-left '#[bold] #S#[default] ⡇'
#set-option -g status-right '#[bold]#(whoami) ● #H#[default] '

set-option -g status-right-length 60
set-option -g status-left-length 60

## highlight active window
set-window-option -g window-status-current-bg colour166
set-window-option -g window-status-current-fg colour15
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-format ' #I #W#F'

# send the prefix to a nested client inside of the window
bind-key a send-prefix

# easy pane join
bind-key @ command-prompt -p "join pane from: "  " join-pane -s '%%'"

# copy to OSX clipboard. 
# 'Enter' copies to OSX clipboard, y copies to tmux cboard (a la vim)
# Set 'v' to start the copy process, like vim
unbind -t vi-copy Enter
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection

bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind-key "'" last-window

# looks like C-y conflicts with vim's 'emmet' plugin
unbind-key C-y

# split with default dir
bind '"' split-window -c "#{pane_current_path}"
bind % split-window   -c "#{pane_current_path}"
bind c new-window     -c "#{pane_current_path}"
