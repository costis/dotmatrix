" Load pathogen.
" Needed on some linux distros.
" see http://www.adamlowe.me/2009/12/vim-destroys-all-other-rails-editors.html
filetype off
filetype plugin indent off

" golang
set runtimepath+=$GOROOT/misc/vim

call pathogen#infect()
call pathogen#helptags()

set nocompatible
filetype plugin indent on
set background=dark
set colorcolumn=100

"set t_Co=256
let g:solarized_termcolors=256
colorscheme solarized

syntax on
" set foldmethod=syntax

" enable matchit.vim for rubytext-block
runtime macros/matchit.vim

set nowrap "disable wrapping

set hidden "you can change buffers without saving
set expandtab
set tabstop=2
set shiftwidth=2
set bs=2
set number "show numbers
set showcmd "show partial command you are typing
set smarttab
set autoindent

" Allow backspacing over everything in insert mode
set backspace=indent,eol,start

" put all vim's temporary file out of current dir
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" set the leader key
let mapleader = ","

" Keymaps
nnoremap <c-c> <ESC> " alternative ESCAPE
inoremap jj <ESC>
nmap <F3> :cn<CR> " find next occurance after vimgrep
nmap <F4> :cp<CR> " find previous occurance after vimgrep

 "change default cursor keys to work on visual not actual lines
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

if has("gui_running")
  " If the current buffer has never been saved, it will have no name,
  " call the file browser to save it, otherwise just save it.
  :map <silent> <C-S> :if expand("%") == ""<CR>:browse confirm w<CR>:else<CR>:confirm w<CR>:endif<CR>
endif

" Toggle invisible characters
nmap <silent> ,l :set list!<CR>

" Close all buffers except current one (via BufOnly.vim)
nmap <silent> ,w :BufOnly<CR>

" CtrlP in open buffer mode
map <silent> ,t :CtrlPBuffer<CR>

" Preview Markdown files
map <leader>P :Mm<CR>

" Toggle the NERDTree
map <silent> ,e :NERDTreeToggle<CR>

" Save buffer
nnoremap <silent> ,s :update<CR>

" Status Line
set statusline=%F%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]

" statusline support for syntactic plugin
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" Statusline always visible
set laststatus=2

" Close NERDTree when opening a file
let g:NERDTreeQuitOnOpen = 1

" Size of window
let g:NERDTreeWinSize = 40

" Enable syntastic syntax checking
let g:syntastic_enable_signs=1

" For vimdiff
set diffopt=filler
" set diffopt+=iwhite

" For ctrlp plugin to ignore files
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*

" Diff changes for opened file
if !exists(":DiffOrig")
    command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
          \ | wincmd p | diffthis
endif

" VSplit open pane to the right
set splitright

" Split open pane below
set splitbelow

" Remove trailing whitespacing before saving
autocmd BufWritePre *.rb :%s/\s\+$//e
autocmd BufWritePre *.js :%s/\s\+$//e
autocmd BufWritePre *.erb :%s/\s\+$//e

" Make the current window big, but leave others context
" set winwidth=84
" We have to have a winheight bigger than we want to set winminheight. But if
" we set winheight to be huge before winminheight, the winminheight set will
" fail.
" set winheight=5
" set winminheight=5
" set winheight=999

" Switch between the last two files
nnoremap <leader><leader> <c-^>

" Vimux should not open new panes
let g:VimuxUseNearestPane = 1

" Remap Turbux keybindings
let g:no_turbux_mappings = 1
map <leader>m <Plug>SendTestToTmux
map <leader>M <Plug>SendFocusedTestToTmux

" Turbux should use drb by default
let g:turbux_command_cucumber = 'cucumber --drb'
let g:turbux_command_rspec    = 'rspec -f d'

" HTML Indentation config
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_indent_script1 = "inc"
let g:html_indent_style = "inc"

" Generate tags for Ruby projects with Bundler support.
" Generates for all  Gemfile gems.
map rt :execute "!bundle list --paths=true \| xargs ctags --extra=+f --exclude=.git --exclude=log -R *"<CR>

" Set highlight for
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
hi NonText ctermfg=7 guifg=gray
hi SpecialKey ctermfg=7 guifg=gray

" Don't display buffer line inside command bar, 'airline' will show it.
let g:bufferline_echo=0
let g:airline_enable_tagbar=1
let g:airline_enable_syntastic=1

" TagBar
nnoremap <silent> <F8> :TagbarToggle<CR>
